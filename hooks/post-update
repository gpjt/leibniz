#!/usr/bin/python

import os
import subprocess
import sys
import tempfile

repository = os.getcwd()
integration_dir = tempfile.mkdtemp()

modified_env = dict(os.environ)
del modified_env['GIT_DIR']

def run_and_exit_on_error(command, **kwargs):
    return_code = subprocess.call(command, shell=True, **kwargs)
    if return_code:
        exit(1)


run_and_exit_on_error("git clone %s %s" % (repository, integration_dir))

os.chdir(integration_dir)

try:
    subprocess.check_output("./run_integration_tests", env=modified_env)
    run_and_exit_on_error("./promote_to_live %s" % (repository,), env=modified_env)
except subprocess.CalledProcessError, e:
    process = subprocess.Popen("./handle_integration_error", stdin=subprocess.PIPE, env=modified_env)
    process.communicate(e.output)
